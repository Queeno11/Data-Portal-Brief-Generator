# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 5.5, 3))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -1, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 7, 4))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -1, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 7, 4))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -2, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 8, 6))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -2, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
#install.packages("tidyverse")
#install.packages("ggrepel")
#install.packages("sysfonts")
library(ggplot2)
library(tidyverse)
library(showtext)
library(sysfonts)
library(ggrepel)
library(patchwork)
library(cowplot)
font_add_google(name = "Open Sans", family = "Open Sans")
showtext_auto()
showtext_opts(dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -2, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "opensans"),
plot.title = element_text(family = "opensans", face = "bold", size = 11),
axis.title = element_text(family = "opensans", size = 12),
axis.text = element_text(family = "opensans", size = 11),
legend.text = element_text(family = "opensans", size = 11),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
warnings()
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -2, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 12),
axis.text = element_text(family = "Open Sans", size = 11),
legend.text = element_text(family = "Open Sans", size = 11),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"), vjust = -2, size = 3.5, color = "black") +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 20),
axis.text = element_text(family = "Open Sans", size = 20),
legend.text = element_text(family = "Open Sans", size = 20),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(
data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"),
vjust = -1,
size = 5,                        # un poco más grande
color = "black",
family = "opensans",            # usa Open Sans
fontface = "plain"              # sin negrita
) +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 20),
axis.text = element_text(family = "Open Sans", size = 18),
legend.text = element_text(family = "Open Sans", size = 20),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(
data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"),
vjust = -1,
size = 5,                        # un poco más grande
color = "black",
family = "Open Sans",            # usa Open Sans
fontface = "plain"              # sin negrita
) +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 20),
axis.text = element_text(family = "Open Sans", size = 18),
legend.text = element_text(family = "Open Sans", size = 20),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("right", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(
data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"),
vjust = -1,
size = 5,                        # un poco más grande
color = "black",
family = "Open Sans",            # usa Open Sans
fontface = "plain"              # sin negrita
) +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 20),
axis.text = element_text(family = "Open Sans", size = 18),
legend.text = element_text(family = "Open Sans", size = 20),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.95, 0.95),         # posición relativa (x, y)
legend.justification = c("left", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(
data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"),
vjust = -1,
size = 5,                        # un poco más grande
color = "black",
family = "Open Sans",            # usa Open Sans
fontface = "plain"              # sin negrita
) +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 20),
axis.text = element_text(family = "Open Sans", size = 18),
legend.text = element_text(family = "Open Sans", size = 20),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.05, 0.95),         # posición relativa (x, y)
legend.justification = c("left", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
# 5. Graficar: eje X = GDP, eje Y = HCI, color = region, punto de Albania más grande
ggplot(merged_data, aes(x = log(gdp), y = HCI, color = wbregion)) +
geom_point(aes(size = ifelse(wbcode == "ALB", 10, 8.5))) +
geom_text(
data = filter(merged_data, wbcode == "ALB"),
aes(label = "Albania"),
vjust = -1,
size = 6,                        # un poco más grande
color = "black",
family = "Open Sans",            # usa Open Sans
fontface = "plain"              # sin negrita
) +
geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "solid", linewidth = 1)+
scale_size_identity() +
scale_color_manual(values = region_colors) +
scale_x_continuous(labels = scales::comma) +
labs(
title = "",
x = "Log GDP per capita (US$)",
y = "Human Capital Index",
color = NULL
) +
theme_minimal()+
theme(
text = element_text(family = "Open Sans"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 11),
axis.title = element_text(family = "Open Sans", size = 20),
axis.text = element_text(family = "Open Sans", size = 18),
legend.text = element_text(family = "Open Sans", size = 17),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.border = element_blank(),
legend.position = c(0.05, 0.95),         # posición relativa (x, y)
legend.justification = c("left", "top"),# ancla en la esquina superior derecha
legend.background = element_blank(),     # ❌ Quita el recuadro
legend.box.background = element_blank(), # ❌ Asegura que no haya borde exterior
#axis.text.x = element_blank()            # ❌ Quita los números del eje X
) + guides(color = guide_legend(override.aes = list(size = 5)))
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 6, dpi = 300)
ggsave("C:/Users/pilih/Downloads/grafico_hci_vs_gdp.png", width = 12, height = 8, dpi = 300)
# 2
modelo1a <- lm(read ~ experience, data = STAR)
summary(modelo1a)
# 2
modelo1a <- lm(read ~ experience, data = STAR)
summary(modelo1a)
#3
modelo2a <- lm(read ~ lunch, data = STAR)
summary(modelo2a)
#4
modelo3a <- lm(read ~ experience + lunch + class_size + female + afam, data = STAR)
#4
modelo3a <- lm(read ~ experience + lunch + class_size + gender + afam, data = STAR)
summary(modelo3a)
############# esto se los paso limpio ##################
library(AER)
data("STAR")
library(dplyr)
library(haven)
# Proxy del tamaño de cada clase
STAR <- STAR %>%
filter(!is.na(schoolid1), !is.na(star1)) %>%
group_by(schoolid1, star1, experience1) %>%
mutate(class_size = n()) %>%
ungroup()
STAR <- STAR %>%
mutate(afam = if_else(ethnicity == "afam", 1, 0)) %>%
mutate(female = if_else(gender == "female", 1, 0))
# Solo queda la data para 1er grado
STAR <- STAR %>% select(gender, birth, read1, math1, lunch1,
school1, degree1, experience1, schoolid1, class_size, afam)
STAR <- STAR %>%
rename_with(~ gsub("1$", "", .x))
# Esta es la base que les paso #########################
write_dta(STAR, "resultados_educativos.dta")
# 2
modelo1a <- lm(read ~ experience, data = STAR)
View(STAR)
STAR <- STAR %>%
# Transformo la variable a 0 y 1
mutate(lunch_0_1 = if_else(lunch == "non-free", 0, ifelse(lunch == "free", 1, NA))) %>%
# Uso la variable como 1 y 2, pero deja de tener formato de factor
mutate(lunch_1_2 = if_else(lunch == "non-free", 1, ifelse(lunch == "free", 2, NA)))
modelo_lunch_0_1 <- lm(read ~ lunch_0_1, data = STAR)
summary(modelo_lunch_0_1)
modelo_lunch_1_2 <- lm(read ~ lunch_1_2, data = STAR)
summary(modelo_lunch_1_2)
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp")
library(stargazer)
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp")
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp", digits = 5)
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp", digits = 7)
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp", digits = 10)
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp")
modelo_lunch_0_1 <- lm(read ~ lunch_0_1 + experience, data = STAR)
modelo_lunch_1_2 <- lm(read ~ lunch_1_2 + experience, data = STAR)
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp")
stargazer(modelo_lunch_0_1, modelo_lunch_1_2,
star.cutoffs = c(0.05, 0.01, 0.001),
report = "vc*sp",
no.space = T)
